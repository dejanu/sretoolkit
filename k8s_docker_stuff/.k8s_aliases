#!/usr/bin/env bash

###################################################################################################################################
# include aliases by adding this line:                                                                                           ##
# if shopt -q login_shell; then                                                                                                  ##
# [ -f $HOME/.k8s_aliases ] && . $HOME/.k8s_aliases                                                                              ##
# fi                                                                                                                             ##
###################################################################################################################################

__usage="
\e[1;33m Aliases:\e[0m
  \e[0;32m kstate \e[0m   -  get cluster health
  \e[0;32m knodes \e[0m - list cluster nodes
  \e[0;32m vaultstatus \e[0m - check vault status
  \e[0;32m kpods_notrunning \e[0m - list all NOT running pods from all namespaces e.g: CrashLoopBackOff
  \e[0;32m registry \e[0m - private registry containers
  \e[0;32m ko <object> \e[0m - list all <object> from all namespaces (e.g: po/svc/deployment/pv/rs/hr)

  \e[0;32m kns_events \e[0m - list events from all namespaces,pretty verbose

  \e[0;32m knode_pods \e[0m - sorted list of pods node allocation
  \e[0;32m knode_status_pods <node_name> \e[0m - pods status with regard to a certain node
  \e[0;32m kpods_running \e[0m - list all running pods from all namespaces
  \e[0;32m kpods_completed \e[0m - list all completed pods from all namespaces
  \e[0;32m kpods_restarted \e[0m - sort restarted pods

"
echo -e "$__usage"
# enable auto-completion
source <(kubectl completion bash)

# check health Metrics API
alias kstate='kubectl get --raw "/healthz?verbose"'
# list nodes
alias knodes='kubectl get node -owide'
# check vault status
alias vaultstatus='kubectl get po -n vault&&kubectl -n vault exec vault-0 -- vault status'
# check pods which are running or not
alias kpods_notrunning='kubectl get po -A|grep -E "ImagePullBackOff|CrashLoopBackOff|Terminating|Init"'
# running containers status
alias registry='docker ps --format "table {{.Names}} {{.Status}}"'

# list all obj type from all namespaces, usage: ko po/svc/deployment/pv/rs/hr
alias ko='f(){ kubectl get $1 -A -o go-template="{{range .items}} --> {{.metadata.name}} in NAMESPACE: {{.metadata.namespace}}{{\"\n\"}}{{end}}"; unset -f f; }; f'

# discovered the field

alias kpods_running='kubectl get pods -A --field-selector=status.phase=Running'