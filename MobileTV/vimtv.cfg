[EU]
VIMTV_VERSION="2.4.0"
# SET TO 3.5 FOR OLD RELEASE OR 3.9 FOR RECENT RELEASE
VIMTV_DEMUXER_VERSION="3.9"
# SET TO 5.13 IF IT WAS COMPILED FROM SOURCES (PATH OF CONFIGURATON FILE IS NOT THE SAME)
VIMTV_MONIT_VERSION="5.13"
# SET TO NATIVE (NATIVE PLAYER, OLD JSON STATUS FILE) OR HTML5 (NEW JSON STATUS FILE)
VIMTV_PLAYER_VERSION="HTML5"
#
##############################################
#-------------- [PROXY] ---------------
# SET TO 1 TO ENABLE PROXY
VIMTV_USE_PROXY="0"
# VIMTV PROXY URL
VIMTV_PROXY_URL="myproxy"
# VIMTV PROXY PORT
VIMTV_PROXY_PORT="8080"
#
##############################################
#-------------- [DEMUXING] ---------------
# TV HEADEND ADDRESS FOR DEMUXING
DEMUXER_IP="10.193.22.58"
# RASPI chez Yves Lazou
#DEMUXER_IP="10.193.11.141"
# TV HEADEND PORT (USUALLY 9981)
DEMUXER_PORT="9981"
# TV HEADEND SECURITY (LOGIN AND PASSWORD IF ANY)
DEMUXER_LOGIN="vim"
DEMUXER_PWD="vimortelle"
# INTERNAL FLAG DO NOT EDIT !
DEMUXER_IS_ON_REMOTE="0"
# INTERNAL FLAG DO NOT EDIT !
DEMUXER_SERVICE_NAME="tvheadend"
# INTERNAL FLAG DO NOT EDIT !
DEMUXER_BACKUP_FILE=".demuxcfg.tar.gz"
# INTERNAL FLAG DO NOT EDIT !
DEMUXER_RESTORE_SERVICE_NAME="demuxrestore"

##############################################
#----------[LOW PROFILE] -------
# VIDEO RESOLUTION FOR LOW PROFILE WxH
VIDEO_RESOLUTION_LOW="160x90"
# AUDIO BITRATE IN KBPS FOR LOW PROFILE
# SET TO 24 FOR AAC_V2 AND TO 32 FOR AAC
AUDIO_BITRATE_LOW="32"
# HLS_BITRATE IN KBPS FOR LOW PROFILE (INCLUDING VIDEO + AUDIO + OVERHEAD)
HLS_BITRATE_LOW="56"

##############################################
#----------[HIGH PROFILE] -------
# VIDEO RESOLUTION FOR HIGH PROFILE WxH
VIDEO_RESOLUTION_HIGH="320x180"
# AUDIO BITRATE IN KBPS FOR HIGH PROFILE
# SET TO 24 FOR AAC_V2 AND TO 32 FOR AAC
AUDIO_BITRATE_HIGH="32"
# HLS_BITRATE IN KBPS FOR HIGH PROFILE (INCLUDING VIDEO + AUDIO + OVERHEAD)
HLS_BITRATE_HIGH="226"

##############################################
----------[HQ PROFILE] -------
# VIDEO RESOLUTION FOR HQ PROFILE WxH
VIDEO_RESOLUTION_HQ="480x270"
# AUDIO BITRATE IN KBPS FOR HQ PROFILE
# SET TO 24 FOR AAC_V2 AND TO 32 FOR AAC
AUDIO_BITRATE_HQ="32"
# HLS_BITRATE IN KBPS FOR HQ PROFILE (INCLUDING VIDEO + AUDIO + OVERHEAD)
HLS_BITRATE_HQ="680"

##############################################
#----------[RADIOPROFILE] -------
# AUDIO BITRATE IN KBPS
# SET TO 24 FOR AAC_V2 AND TO 32 FOR AAC
RADIO_AUDIO_BITRATE="32"

##############################################
#----------[HLS] -------
# SEGMENT DURATION IN SECONDS
HLS_SEGMENT_DURATION="9"
# NUMBER OF SEGMENTS FOR EACH M3U8 PLAYLIST
HLS_LIST_SIZE="5"
# MAX NUMBER OF SEGMENTS FOR EACH PROFILE (AVOID DISK CONGESTION)
HLS_WRAP="50"
# START NUMBER OF SEGMENT INDEX
HLS_START_NUMBER="1"

##############################################
#----------[H264] -------
# SET TO 1 TO BYPASS VIDEO TRANSCODING (WILL USE copy OPTION OF FFMPEG)
H264_BYPASS_TRANSCODE="0"
# PREDEFINED PROFILE
H264_PROFILE="baseline"
# PREDEFINED PRESET
H264_PRESET="medium"
# LEVEL
H264_OPT_LEVEL="13"

##############################################
#----------[FDK_AAC] -------
# SET TO 1 TO BYPASS AUDIO TRANSCODING (WILL USE copy OPTION OF FFMPEG)
AAC_BYPASS_TRANSCODE="0"
# AAC AUDIO PROFILE
# SET THIS VARIABLE IF YOU WANT TO APPLY A PROFILE TO THE AUDIO TRANSCODING
AAC_PROFILE="aac_he"

##############################################
#-------------- [PUBLICATION] ---------------
# SET TO 1 TO ENABLE PUBLISHING POINT TO BE ON A REMOTE MACHINE
PUBLISH_POINT_IS_ON_REMOTE="0"
# SET HERE THE FULL PATH OF THE REMOTE HTTP SERVER (eg user@xx.xx.xx.xx:/var/www/streaming)
PUBLISH_POINT_REMOTE_PATH="vim@10.193.22.59:/var/www/streamingredhat"
# SET HERE THE PATH OF THE LOCAL HTTP SERVER PUBLICATION POINT
PUBLISH_POINT_PATH_BASE="/var/www/html"
# SET HERE THE DESTINATION DIR OF THE HLS SEGMENTS
PUBLISH_POINT_DIR="streaming"

##############################################
#-------------- [TRANSCODING] ---------------
# NUMBER OF THREADS USED TO TRANSCODE
TRANSCODE_MAX_THREADS="1"
# NAME AND PATH OF EXECUTABLE RESPONSIBLE FOR TRANSCODING
TRANSCODE_DAEMON_EXEC="/usr/local/bin/ffmpeg"
# NAME AND PATH OF EXECUTABLE RESPONSIBLE FOR PROBING
TRANSCODE_PROBING_EXEC="/usr/local/bin/ffprobe"
# BASE PATH OF TRANSCODE SCRIPTS
TRANSCODE_DAEMON_SCRIPTS_PATH_BASE="/opt/vimtv"
# DIR OF TRANSCODE SCRIPTS
TRANSCODE_DAEMON_SCRIPTS_DIR="scripts"
# DIR OF TRANSCODE CONFIG SCRIPTS
TRANSCODE_DAEMON_CONFIG_SCRIPTS_DIR="/usr/bin"
# DIR OF TRANSCODE UNINSTALL SCRIPTS
TRANSCODE_DAEMON_UNINSTALL_SCRIPTS_DIR="uninstallscripts"
# BASE PATH OF DEAMON_SCRIPTS
DAEMON_SCRIPTS_PATH_BASE="/etc/vimtv.d"
# USER NAME
TRANSCODE_DAEMON_USER="osadmin"
# NUMBER OF CHANNELS TO TRANSCODE (ON LOCAL MACHINE)
TRANSCODE_CHANNELS_NUMBER="6"
# NUMBER OF PROFILES TO OUTPUT
TRANSCODE_PROFILES_NUMBER="3"
# CHANNEL MAPPING FOR MULTIPLEX
TRANSCODE_CHANNELS_MAP=( 1 2 3 4 5 6 )
# CHANNEL ENABLE FLAG FOR MULTIPLEX (0 DISABLE, 1 LOCAL, 2 REMOTE)
TRANSCODE_CHANNELS_ENABLE_MAP=( 1 1 1 1 1 1 )
# NUMBER OF RADIOS TO TRANSCODE
TRANSCODE_RADIOS_NUMBER="3"
# RADIO MAPPING FOR MULTIPLEX
TRANSCODE_RADIOS_MAP=( 1 2 3 )
# RADIO ENABLE FLAG FOR MULTIPLEX
TRANSCODE_RADIOS_ENABLE_MAP=( 1 1 1 )

##############################################
#-------------- [DAEMON] ---------------
# NAME OF THE MAIN DAEMON
TRANSCODE_VIMTV_DAEMON_NAME_PREFIX="vimtv"
# NAME OF THE MONITORING DAEMON
TRANSCODE_DAEMON_MONITOR_NAME="vimtvm"
# NAME OF THE MONITORING EXECUTABLE (MUST THE THE SAME AS DAEMON NAME !!)
TRANSCODE_DAEMON_MONITOR_EXEC=$DAEMON_SCRIPTS_PATH_BASE/$TRANSCODE_DAEMON_MONITOR_NAME

##############################################
#-------------- [MONITORING] ---------------
# MONITORING PERIOD IN SECONDES
TRANSCODE_MONITORING_PERIOD_IN_S="120"
# NUMBER OF CONSECUTIVE TIMES THE STREAM IS DOWN, BEFORE TRYING TO RESTART TVHEADEND
VIMTV_TV_STREAM_DOWN_THRESHOLD="4"
# NUMBER OF TV_HEADEND RESTART BEFORE BLACKLISTING A SINGLE STREAM
VIMTV_TV_HEADEND_RESTART_THRESHOLD="6"
# NUMBER OF STREAM PROCESS RESTART BEFORE BLACKISTING A SINGLE STREAM
VIMTV_TV_PL_FROZEN_RESTART_THRESHOLD="6"
# NUMBER OF CYCLES ALL STREAM ARE DOWN BEFORE RESTARTING THEM ALL
VIMTV_MONITOR_ALL_STREAMING_CHANNEL_DOWN_RESTART_THRESHOLD="3"
# NUMBER OF CYCLES ALL STREAM ARE DOWN BEFORE DEMONITORING AND STOPPING THEM ALL
VIMTV_MONITOR_ALL_STREAMING_CHANNEL_DOWN_STOP_THRESHOLD="5"
# NUMBER OF CYCLES ALL PROCESS ARE DOWN BEFORE RESTARTING THEM ALL
VIMTV_MONITOR_ALL_TRANSCODE_PROCESS_DOWN_RESTART_THRESHOLD="3"
# NUMBER OF CYCLES ALL PROCESS ARE DOWN BEFORE DEMONITORING AND STOPPING THEM ALL
VIMTV_MONITOR_ALL_TRANSCODE_PROCESS_DOWN_STOP_THRESHOLD="5"
# NUMBER OF CYCLES ALL STREAM ARE UP BEFORE GRATIFICATION (BONUS)
VIMTV_MONITOR_ALL_STREAMING_CHANNEL_UP_GRATIFICATION_THRESHOLD="3"
# NUMBER OF CYCLES ALL PROCESS ARE UP BEFORE GRATIFICATION (BONUS)
VIMTV_MONITOR_ALL_TRANSCODE_PROCESS_UP_GRATIFICATION_THRESHOLD="3"
# NUMBER OF CYCLES ALL STREAM ARE UP BEFORE RESETTING GRATIFICATION COUNTER
VIMTV_MONITOR_ALL_STREAMING_CHANNEL_UP_RESET_GRATIFICATION_THRESHOLD="20"
# NUMBER OF CYCLES ALL PROCESS ARE UP BEFORE RESETTING GRATIFICATION COUNTER
VIMTV_MONITOR_ALL_TRANSCODE_PROCESS_UP_RESET_GRATIFICATION_THRESHOLD="20"
# NUMBER OF CYCLES THE SYSTEM IS OUT OF ORDER BEFORE TRYING TO RESTART ALL (RESET MONITORING)
VIMTV_MONITOR_ALL_SYSTEM_OUT_OF_ORDER_RESTART_THRESHOLD="30"
# INTERNAL MONITORING CONFIG FILE
TRANSCODE_INTERNAL_MONITORING_FILE=$TRANSCODE_DAEMON_SCRIPTS_PATH_BASE/monit/monitrc
# SET ADMIN MAIL
VIMTV_ADMIN_MAIL="patrick.delvenne@orange.com"
# SET IP INTERFACE
VIMTV_IP_INTERFACE="eth0"
# INTERNAL FLAG DO NOT EDIT !
EXTERNAL_MONIT_SERVICE_NAME="monit"

##############################################
#-------------- [NAGIOS MONITORING] ----------
# SET TO 1 TO ENABLE NAGIOS NOTIFOCATIONS
NAGIOS_NOTIFICATION_ENABLE="0"
# NAME AND PATH OF EXECUTABLE RESPONSIBLE TO SEND NOTIFICATIONS TO NAGIOS
NAGIOS_SEND_EXEC="/usr/sbin/send_nsca"
# NAME AND PATH OF NAGIOS SEND CONFIG FILE
NAGIOS_SEND_CONFIG_FILE=$DAEMON_SCRIPTS_PATH_BASE/send_nsca.cfg
# NAGIOS SERVER IP ADDRESS
NAGIOS_SERVER_IP="10.0.0.0"
# PATH TO NAGIOS NOTIFIER SCRIPT
NAGIOS_NOTIFIER_SCRIPT=$DAEMON_SCRIPTS_PATH_BASE/vimtvnagiosnotifier

##############################################
#-------------- [LOG AND DEBUG] ---------------
# SET MONITOR LOG LEVEL
MONITOR_LOGS_LEVEL="1"
# SET MONITOR DEBUG FACILITY
MONITOR_DEBUG_ENABLE="0"
# SET HERE THE DESTINATION PATH OF THE LOGS
TRANSCODE_LOGS_DIR="logs"
# SET TO 1 TO ENABLE TRANSCODING LOGS (FFMPEG LOGS)
TRANSCODE_LOGS_ENABLE="0"
# SET TO 1 TO ENABLE DAEMON DEBUG LOGS
TRANSCODE_DAEMON_DEBUG_LOGS_ENABLE="1"
# NAME OF DEBUG LOG_FILE
TRANSCODE_DAEMON_DEBUG_LOG_FILE="vimtv.log"
# SET TO 1 TO ENABLE VIDEO WATERMARKING
VIDEO_WATERMARKING_ENABLE="1"
# SET TO 1 TO ENABLE AUDIO WATERMARKING ENCODING
RADIO_WATERMARKING_ENCODE_ENABLE="1"
# DIR OF RADIOS LOGOS TO WATERMARK
AUDIO_WATERMARKING_DIR="radiologos"
# DIR OF DOCUMENTATION
VIMTV_DOCS_DIR="/usr/share/doc/vimtv"
# TWEETER ENABLE
VIMTV_TWEETER_ENABLE="0"
# TWEETER MACHINE NAME
VIMTV_TWEETER_CLIENT_NAME="Dev"

##############################################
#----------------- [DNS] ---------------------
# SET HERE THE DNS NAME OF THE MACHINE
VIMTV_DNS_MACHINE_IS_MASTER="1"
VIMTV_DNS_MACHINE_NAME="vim1"
VIMTV_DNS_DOMAIN_NAME="tv.orange-labs.fr"
VIMTV_DNS_IP="10.0.0.100"
# SET HERE THE DNS NAME OF THE BACKUP MACHINE
VIMTV_DNS_BACKUP_MACHINE_NAME="vim2"
VIMTV_DNS_BACKUP_IP="10.0.0.102"
VIMTV_DNS_BACKUP_MACHINE_PASS="vimortelle"

##############################################
#----------------- [MISC] ---------------------
# SET HERE PATH AND FILE NAME FOR TEMPORARY CONFIG FILE
VIMTV_CONFIG_TMP_FILE="/tmp/.vimtv.cfg"
# SET HERE PATH AND FILE NAME FOR TEMPORARY CRONTAB
VIMTV_CRONTAB_TMP_FILE="/tmp/.crontabvimtv_old"


##############################################
# NO CONFIGURATION BELOW THIS LINE
##############################################
if [[ $VIMTV_DEMUXER_VERSION = "3.9" ]]; then
    VIMTV_DEMUXER_CHANNEL_KEY="channelnumber"
    VIMTV_DEMUXER_CHANNEL_NAME_KEY="service_name"
else
    VIMTV_DEMUXER_CHANNEL_KEY="channelid"
    VIMTV_DEMUXER_CHANNEL_NAME_KEY="title"
fi   
if [[ -z $DEMUXER_LOGIN ]] ; then
    VIMTV_DEMUXER_SOURCE="http://$DEMUXER_IP:$DEMUXER_PORT/stream/$VIMTV_DEMUXER_CHANNEL_KEY"
    VIMTV_REMOTE_DEMUXER_SOURCE="http://$VIMTV_DNS_BACKUP_IP:$DEMUXER_PORT/stream/$VIMTV_DEMUXER_CHANNEL_KEY"
else
    VIMTV_DEMUXER_SOURCE="http://$DEMUXER_LOGIN:$DEMUXER_PWD@$DEMUXER_IP:$DEMUXER_PORT/stream/$VIMTV_DEMUXER_CHANNEL_KEY"
    VIMTV_REMOTE_DEMUXER_SOURCE="http://$DEMUXER_LOGIN:$DEMUXER_PWD@$VIMTV_DNS_BACKUP_IP:$DEMUXER_PORT/stream/$VIMTV_DEMUXER_CHANNEL_KEY"
fi
OUTPUT_HLS_OPTIONS="-hls_time $HLS_SEGMENT_DURATION -hls_list_size $HLS_LIST_SIZE -hls_wrap $HLS_WRAP -start_number $HLS_START_NUMBER"

if [[ $AAC_BYPASS_TRANSCODE = 1 ]] ; then
    AUDIO_OPTIONS_LOW="-c:a copy -map 0:1"
    AUDIO_OPTIONS_HIGH="-c:a copy -map 0:1"
    AUDIO_OPTIONS_HQ="-c:a copy -map 0:1"
else
    if [[ $AAC_PROFILE = aac* ]] ; then
        # -profile:a use a profile (aac_he_v1, aac_he_v2..)
        AUDIO_OPTIONS_LOW="-c:a libfdk_aac -profile:a $AAC_PROFILE -b:a ${AUDIO_BITRATE_LOW}k -ar 48k -map 0:1"
        AUDIO_OPTIONS_HIGH="-c:a libfdk_aac -profile:a $AAC_PROFILE -b:a ${AUDIO_BITRATE_HIGH}k -ar 48k -map 0:1"
        AUDIO_OPTIONS_HQ="-c:a libfdk_aac -profile:a $AAC_PROFILE -b:a ${AUDIO_BITRATE_HQ}k -ar 48k -map 0:1"
        RADIO_AUDIO_OPTIONS="-c:a libfdk_aac -profile:a $AAC_PROFILE -b:a ${RADIO_AUDIO_BITRATE}k -ar 48k"
    else
        # -b:a audio bitrate
        # -ar audio resampling
        AUDIO_OPTIONS_LOW="-c:a libfdk_aac -b:a ${AUDIO_BITRATE_LOW}k -ar 48k -map 0:1"
        AUDIO_OPTIONS_HIGH="-c:a libfdk_aac -b:a ${AUDIO_BITRATE_HIGH}k -ar 48k -map 0:1"
        AUDIO_OPTIONS_HQ="-c:a libfdk_aac -b:a ${AUDIO_BITRATE_HQ}k -ar 48k -map 0:1"
        RADIO_AUDIO_OPTIONS="-c:a libfdk_aac -b:a ${RADIO_AUDIO_BITRATE}k -ar 48k"
    fi
fi



if [[ $VIDEO_WATERMARKING_ENABLE = 1 ]] ; then
    # -vf 'scale= set witdth and let ffmpeg set the heigh to keep original aspect ratio
    # -vf drawtext watermarking
    #-aspect 16:9
    WATERMARK_OPTIONS_LOW="-aspect 16:9 -vf scale=176:-1 -vf drawtext="fontfile=/usr/share/fonts/truetype/freefont/FreeSans.ttf:text='Q1':fontcolor=red@1.0:fontsize=50:x=0:y=0""
    WATERMARK_OPTIONS_HIGH="-aspect 16:9 -vf scale=320:-1 -vf drawtext="fontfile=/usr/share/fonts/truetype/freefont/FreeSans.ttf:text='Q2':fontcolor=red@1.0:fontsize=50:x=0:y=0""
    WATERMARK_OPTIONS_HQ="-aspect 16:9 -vf scale=440:-1 -vf drawtext="fontfile=/usr/share/fonts/truetype/freefont/FreeSans.ttf:text='Q3':fontcolor=red@1.0:fontsize=50:x=0:y=0""

else
    WATERMARK_OPTIONS_LOW="-aspect 16:9 -vf scale=176:-1"
    WATERMARK_OPTIONS_HIGH="-aspect 16:9 -vf scale=320:-1"
    WATERMARK_OPTIONS_HQ="-aspect 16:9 -vf scale=440:-1"
fi
if [[ $RADIO_WATERMARKING_ENCODE_ENABLE = 1 ]] ; then
    RADIO_WATERMARK_ENCODE_OPTIONS="-vcodec libx264 -pix_fmt yuv420p"
else
    RADIO_WATERMARK_ENCODE_OPTIONS=""
fi

if [[ $H264_BYPASS_TRANSCODE = 1 ]] ; then
    VIDEO_OPTIONS_LOW="-c:v copy -map 0:0"
    VIDEO_OPTIONS_HIGH="-c:v copy -map 0:0"
    VIDEO_OPTIONS_HQ="-c:v copy -map 0:0"
else
    # -s resolution
    # -bsf h264_mp4toannexb transform 4 bytes len to start code (not needed here)
    # -pix_fmt yuv420p ensure legacy compatibility
    # -g gop length (should be twice on high rate)
    # -keyint_min min gop lenght
    # -r frame rate
    # -b:v / -minrate / - maxrate = simulate a CBR
    # -vprofile h264 profile (main, baseline..)
    # -preset h264 preset (fast, ultrafast, medium)
    # -x264opts level see https://trac.ffmpeg.org/wiki/Encode/H.264
    VIDEO_OPTIONS_LOW="-s $VIDEO_RESOLUTION_LOW $WATERMARK_OPTIONS_LOW -c:v libx264 -pix_fmt yuv420p -force_key_frames $HLS_SEGMENT_DURATION -g 36 -keyint_min 100 -b:v ${HLS_BITRATE_LOW}k -minrate ${HLS_BITRATE_LOW}k -maxrate ${HLS_BITRATE_LOW}k -bufsize 141k -r 12 -flags -global_header -map 0:0 -vprofile $H264_PROFILE -preset $H264_PRESET -sc_threshold 0 -x264opts level=$H264_OPT_LEVEL"
    VIDEO_OPTIONS_HIGH="-s $VIDEO_RESOLUTION_HIGH $WATERMARK_OPTIONS_HIGH -c:v libx264 -pix_fmt yuv420p -force_key_frames $HLS_SEGMENT_DURATION -g 72 -keyint_min 200 -b:v ${HLS_BITRATE_HIGH}k -minrate ${HLS_BITRATE_HIGH}k -maxrate ${HLS_BITRATE_HIGH}k -bufsize 347k -r 24 -flags -global_header -map 0:0 -vprofile $H264_PROFILE -preset $H264_PRESET -sc_threshold 0 -x264opts level=$H264_OPT_LEVEL"
    VIDEO_OPTIONS_HQ="-s $VIDEO_RESOLUTION_HQ $WATERMARK_OPTIONS_HQ  -c:v libx264 -pix_fmt yuv420p -force_key_frames $HLS_SEGMENT_DURATION -g 72 -keyint_min 200 -b:v ${HLS_BITRATE_HQ}k -minrate ${HLS_BITRATE_HQ}k -maxrate ${HLS_BITRATE_HQ}k -bufsize 650k -r 24 -flags -global_header -map 0:0 -vprofile $H264_PROFILE -preset $H264_PRESET -sc_threshold 0 -x264opts level=$H264_OPT_LEVEL"
fi

if [[ $TRANSCODE_LOGS_ENABLE = 1 ]] ; then
    export FFREPORT=file=$TRANSCODE_DAEMON_SCRIPTS_PATH_BASE/$TRANSCODE_LOGS_DIR/ffmpeg-$(date +%Y%m%s).log
fi

BR_LOW=$(($HLS_BITRATE_LOW + $AUDIO_BITRATE_LOW + 25))
BR_HIGH=$(($HLS_BITRATE_HIGH + $AUDIO_BITRATE_HIGH + 65))
BR_HQ=$(($HLS_BITRATE_HQ + $AUDIO_BITRATE_HQ + 250))

VIMTV_M3U8_LOW="#EXTM3U\n#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH="$BR_LOW""000",RESOLUTION="$VIDEO_RESOLUTION_LOW",CODECS=\"avc1.42c00d,mp4a.40.5\"\n"
VIMTV_M3U8_HIGH="\n#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH="$BR_HIGH""000",RESOLUTION="$VIDEO_RESOLUTION_HIGH",CODECS=\"avc1.42c00d,mp4a.40.5\"\n"
VIMTV_M3U8_HQ="\n#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH="$BR_HQ""000",RESOLUTION="$VIDEO_RESOLUTION_HQ",CODECS=\"avc1.42c00d,mp4a.40.5\"\n"

VIMTV_TRANSCODE_OPTIONS_LOW=$AUDIO_OPTIONS_LOW" "$VIDEO_OPTIONS_LOW" "$OUTPUT_HLS_OPTIONS
VIMTV_TRANSCODE_OPTIONS_HIGH=$AUDIO_OPTIONS_HIGH" "$VIDEO_OPTIONS_HIGH" "$OUTPUT_HLS_OPTIONS
VIMTV_TRANSCODE_OPTIONS_HQ=$AUDIO_OPTIONS_HQ" "$VIDEO_OPTIONS_HQ" "$OUTPUT_HLS_OPTIONS

#echo "*****************************************************************"
#echo VIMTV_DEMUXER_SOURCE=$VIMTV_DEMUXER_SOURCE
#echo AUDIO_OPTIONS_LOW=$AUDIO_OPTIONS_LOW
#echo AUDIO_OPTIONS_HIGH=$AUDIO_OPTIONS_HIGH
#echo VIDEO_OPTIONS_LOW=$VIDEO_OPTIONS_LOW
#echo VIDEO_OPTIONS_HIGH=$VIDEO_OPTIONS_HIGH
#echo OUTPUT_HLS_OPTIONS=$OUTPUT_HLS_OPTIONS
#echo VIMTV_TRANSCODE_OPTIONS_LOW=$VIMTV_TRANSCODE_OPTIONS_LOW
#echo VIMTV_TRANSCODE_OPTIONS_HIGH=$VIMTV_TRANSCODE_OPTIONS_HIGH
#echo VIMTV_TRANSCODE_OPTIONS_HQ=$VIMTV_TRANSCODE_OPTIONS_HQ
#echo "*****************************************************************"

COLOR_DARK_RED='\e[0;31m'
COLOR_LIGHT_GREEN='\e[1;32m'
COLOR_ORANGE='\e[0;33m'
COLOR_WHITE='\e[1;37m'
COLOR_END='\e[0;m'

if [[ $VIMTV_USE_PROXY = 1 ]] ; then
    export http_proxy=$VIMTV_PROXY_URL:$VIMTV_PROXY_PORT
    export https_proxy=$VIMTV_PROXY_URL:$VIMTV_PROXY_PORT
fi

#--------------------- PRIVATE ---------------------------------------
# To use with gmail edit
# sudo nano /etc/msmtprc
#########################################
# $1 MAIL SUBJECT
# $2 MAIL TEXT
__do_vimtv_mail() {
#########################################
VIMTV_IP_CLIENT_ADDR=$(do_vimtv_get_ip)
VIMTV_MAIL_FROM="$VIMTV_IP_CLIENT_ADDR""@orange.com"
echo "To:$VIMTV_ADMIN_MAIL
Cc:
Bcc:
Subject:${1}
Content-Type: text/html;
<html>
<head>
<title>TITRE</title>
<BR>${2}</BR>
</head>
</html>" | msmtp -v --timeout 10 -f $VIMTV_MAIL_FROM -t $VIMTV_ADMIN_MAIL 2>&1 >/dev/null
}

#########################################
# $1 = NAME OF PROCESS TO FIND
# $2 = POSITION IN THE STRING WHERE TO FIND PID
__do_vimtv_find_process(){
#########################################
    # -w option is for exact match. This is needed in case processes are named 1, 10 , 11...
    # without that option they all match
    echo $(ps ax | grep -w "$1" | grep -v "grep" | cut -d " " -f $2)
}

#########################################
# $1 = NAME OF THE PROCESS
__do_vimtv_kill_process(){
#########################################
    local PID=""
    PID=$(do_vimtv_find_pid $1);
    if [[ $PID != "" ]] ; then
        #echo Killing $PID
        do_vimtv_log "DEBUG" "Killing $PID"
        kill -9 $PID
    else
        do_vimtv_log "DEBUG" "Process $1 was not running, nothing to kill"
        #echo "Nothing to kill..."
    fi
}

#--------------------- PUBLIC ---------------------------------------
#########################################
do_vimtv_get_ip(){
########################################
    VIMTV_IP_ADDR=$(ip addr show $VIMTV_IP_INTERFACE | awk -F" +|/" 'NR==3{print $3}')
    echo $VIMTV_IP_ADDR
}
#########################################
# $1 = NAME OF PROCESS TO FIND
do_vimtv_find_pid(){
########################################
    # Search PID if > 10000
    local TRANSCODE_RUNNING_PID=""
    TRANSCODE_RUNNING_PID=$(__do_vimtv_find_process $1 1)
    if [[ $TRANSCODE_RUNNING_PID == "" ]] ; then
        # Search PID if > 1000
        TRANSCODE_RUNNING_PID=$(__do_vimtv_find_process $1 2)
        if [[ $TRANSCODE_RUNNING_PID == "" ]] ; then
            # Search PID if > 100
            TRANSCODE_RUNNING_PID=$(__do_vimtv_find_process $1 3)
        fi
    fi
    echo $TRANSCODE_RUNNING_PID
}

#########################################
# $1 = INDEX OF STREAMING CHANNEL (FROM TVH POINT OF VIEW, NAMED IN THE MAP)
do_vimtv_kill_transcoding_process(){
#########################################
    __do_vimtv_kill_process $VIMTV_DEMUXER_SOURCE/$1
}

#########################################
# $1 = INDEX OF STREAMING CHANNEL (FROM TVH POINT OF VIEW, NAMED IN THE MAP)
do_vimtv_find_transcoding_pid(){
#########################################
    do_vimtv_find_pid $VIMTV_DEMUXER_SOURCE/$1
}

#########################################
# $1 = 1 FEU VERT, 2 FEU ORANGE, 3 FEU ROUGE
# $2 = MESSAGE TO TWEET
do_vimtv_tweet() {
#########################################
    local VIMTV_TWEETER_DATE=$(date +%Y-%m-%d@%H:%M:%S)
    local VIMTV_TWEETER_MSG=${VIMTV_TWEETER_DATE}" ["$VIMTV_TWEETER_CLIENT_NAME"] "${2}
    if [[ $VIMTV_TWEETER_ENABLE = 1 ]] ; then
        python $TRANSCODE_DAEMON_SCRIPTS_PATH_BASE/$TRANSCODE_DAEMON_SCRIPTS_DIR/tweet.py "$1" "$VIMTV_TWEETER_MSG"
    fi
}

#########################################
# $1 = ERROR/DEBUG/INFO
# $2 = MESSAGE TO LOG
do_vimtv_log() {
#########################################
    local VIMTV_LOG_DATE=$(date +%Y-%m-%d@%H:%M:%S)
    local VIMTV_LOG_FILE=$TRANSCODE_DAEMON_SCRIPTS_PATH_BASE/$TRANSCODE_LOGS_DIR/$TRANSCODE_DAEMON_DEBUG_LOG_FILE
    local VIMTV_LOG_MSG=${VIMTV_LOG_DATE}" ["${1}"-"$VIMTV_IP_CLIENT_ADDR"] "${2}
    echo -e $VIMTV_LOG_MSG >> $VIMTV_LOG_FILE
    case "$1" in
        # THIS IS AN ERROR ?
        FATAL|TRACE)
            if [[ $MONITOR_LOGS_LEVEL -ge 1 ]] ; then
                __do_vimtv_mail "$VIMTV_LOG_MSG" "$VIMTV_LOG_MSG"
            fi
            ;;

        ERROR)
            if [[ $MONITOR_LOGS_LEVEL -ge 2 ]] ; then
                __do_vimtv_mail "$VIMTV_LOG_MSG" "$VIMTV_LOG_MSG"
            fi
            ;;

        INFO)
            if [[ $MONITOR_LOGS_LEVEL -ge 3 ]] ; then
                __do_vimtv_mail "$VIMTV_LOG_MSG" "$VIMTV_LOG_MSG"
            fi
            ;;

        DEBUG)
            if [[ $MONITOR_LOGS_LEVEL -ge 4 ]] ; then
                __do_vimtv_mail "$VIMTV_LOG_MSG" "$VIMTV_LOG_MSG"
            fi
            ;;
    esac
}

#########################################
do_vimtv_clean_publishing_point(){
#########################################
    local INDEXPL=0
    # VIDEOS
    for (( i = 0 ; i < $TRANSCODE_CHANNELS_NUMBER ; i++ ))
    do
        INDEXPL=$(($i + 1))
        # ERASE ALL FILES FOR THESE CHANNEL
        rm -f $PUBLISH_POINT_PATH_BASE/$PUBLISH_POINT_DIR/$INDEXPL.m3u8
        rm -f $PUBLISH_POINT_PATH_BASE/$PUBLISH_POINT_DIR/$INDEXPLvim_*.ts
        rm -f $PUBLISH_POINT_PATH_BASE/$PUBLISH_POINT_DIR/$INDEXPLvim_*.m3u8
    done
    # RADIOS
    for (( i = 0 ; i < $TRANSCODE_RADIOS_NUMBER ; i++ ))
    do
        INDEXPL=$(($i + 1))
        # ERASE ALL FILES FOR THESE RADIO
        rm -f $PUBLISH_POINT_PATH_BASE/$PUBLISH_POINT_DIR/r$INDEXPL.m3u8
        rm -f $PUBLISH_POINT_PATH_BASE/$PUBLISH_POINT_DIR/r$INDEXPL*.ts
    done
}

#########################################
do_vimtv_check_os(){
#########################################
    TRANSCODE_REDHAT=0
    if [ -f /etc/rc.d/init.d/functions ]; then
        . /etc/rc.d/init.d/functions
        TRANSCODE_REDHAT=1
        BIND_SERVICE_NAME="named"
        BIND_CONF_NAMED_FILES="/var/named/chroot/etc"
        BIND_CONF_DB_FILES="/var/named/chroot/var/named"
        MONIT_STATUS_STOPPED_KEY="stopped"
        # EXTERNAL MONITORING CONFIG FILE
        # IF MONIT 5.13 IS USED (COMPILED FROM SOURCES) THE PATH IS /usr/local/etc/monitc
        if [[ $VIMTV_MONIT_VERSION = "5.13" ]]; then
            TRANSCODE_EXTERNAL_MONITORING_FILE="/usr/local/etc/monitrc"
        else
            TRANSCODE_EXTERNAL_MONITORING_FILE="/etc/monit.d/monitrc"
        fi    
    else
        if [ -f /lib/lsb/init-functions ]; then
            . /lib/lsb/init-functions
            BIND_SERVICE_NAME="bind9"
            BIND_CONF_NAMED_FILES="/etc/bind"
            BIND_CONF_DB_FILES="/etc/bind"
            MONIT_STATUS_STOPPED_KEY="not"
            TRANSCODE_EXTERNAL_MONITORING_FILE="/etc/monit/monitrc"
        else
            echo -e "${COLOR_DARK_RED}[ERROR]Unsupported platform${COLOR_END}"
            exit 1
        fi
    fi
}

#########################################
do_vimtv_check_apache(){
#########################################
    do_vimtv_check_os

    HTTP_SERVER_SERVICE_NAME=""
    CONFIG_APACHE_SERVICE_NAME=""
    CONFIG_APACHE_SECURITY_FILE=""
    CONFIG_APACHE_ERROR_PAGE_FILE=""

    if [ $PUBLISH_POINT_IS_ON_REMOTE -eq 0 ]; then
        if [ $TRANSCODE_REDHAT -eq 1 ]; then
            if [ -d /etc/httpd/conf.d ]; then
                HTTP_SERVER_SERVICE_NAME="apache"
                CONFIG_APACHE_DOC_PATH="/var/www/html"
                CONFIG_APACHE_BASE_PATH="/etc/httpd"
                CONFIG_APACHE_PATH="$CONFIG_APACHE_BASE_PATH/conf.d"
                CONFIG_APACHE_FILE="conf/httpd.conf"
                CONFIG_APACHE_SERVICE_NAME="httpd"
            fi
        else
            if [ -d /etc/apache2/conf.d ]; then
                HTTP_SERVER_SERVICE_NAME="apache"
                CONFIG_APACHE_DOC_PATH="/var/www"
                CONFIG_APACHE_BASE_PATH="/etc/apache2"
                CONFIG_APACHE_PATH="$CONFIG_APACHE_BASE_PATH/conf.d"
                CONFIG_APACHE_FILE="apache2.conf"
                CONFIG_APACHE_SECURITY_FILE="security"
                CONFIG_APACHE_ERROR_PAGE_FILE="localized-error-pages"
                CONFIG_APACHE_SERVICE_NAME="apache2"
            fi
            if [ -d /etc/apache2/conf-enabled ]; then
                HTTP_SERVER_SERVICE_NAME="apache"
                CONFIG_APACHE_DOC_PATH="/var/www/html"
                CONFIG_APACHE_BASE_PATH="/etc/apache2"
                CONFIG_APACHE_PATH="$CONFIG_APACHE_BASE_PATH/conf-enabled"
                CONFIG_APACHE_FILE="apache2.conf"
                CONFIG_APACHE_SECURITY_FILE="security.conf"
                CONFIG_APACHE_ERROR_PAGE_FILE="localized-error-pages.conf"
                CONFIG_APACHE_SERVICE_NAME="apache2"
            fi
            if [ -d /etc/nginx/conf.d ]; then
                HTTP_SERVER_SERVICE_NAME="nginx"
                CONFIG_APACHE_DOC_PATH="/usr/share/nginx/www"
                CONFIG_APACHE_BASE_PATH="/etc/nginx"
                CONFIG_APACHE_FILE="sites-enabled/default"
                CONFIG_APACHE_SERVICE_NAME="nginx"
            fi
        fi
    fi
}

#########################################
do_vimtv_check_sshfs(){
#########################################
    local STATUS
    do_vimtv_check_os
    if [ $TRANSCODE_REDHAT -eq 1 ]; then
        STATUS=$(echo $(rpm -qa | grep sshfs |  cut -c 6-10))
        if [[ $STATUS = "sshfs" ]] ; then
            echo YES
        else
            echo NO
        fi
    else
        STATUS=$(echo $(dpkg -l | grep sshfs |  cut -c 1-2))
        if [[ $STATUS = "ii" ]] ; then
            echo YES
        else
            echo NO
        fi
    fi
}

#########################################
do_vimtv_check_remote_ismounted(){
#########################################
    local STATUS=$(mount)
    if [[ $STATUS = *"$PUBLISH_POINT_REMOTE_PATH"* ]]; then
        echo YES
    else
        echo NO
    fi
}

#########################################
do_vimtv_check_root_priviledges(){
#########################################
    # Test des droits administrateur
    local USER_NAME_TEST
    do_vimtv_check_os
    if [[ $TRANSCODE_REDHAT -eq 1 ]] ; then
       USER_NAME_TEST="osadmin"
    else
       USER_NAME_TEST="root"
    fi
    if [ $USER != $USER_NAME_TEST -o $UID != 0 ]
    then
        echo -e "${COLOR_DARK_RED}[ERROR] - Only root can do that !${COLOR_END}"
        exit 1
    fi
}

export -f do_vimtv_get_ip
export -f do_vimtv_find_pid
export -f do_vimtv_find_transcoding_pid
export -f do_vimtv_kill_transcoding_process
export -f do_vimtv_clean_publishing_point
export -f do_vimtv_check_os
export -f do_vimtv_check_apache
export -f do_vimtv_check_sshfs
export -f do_vimtv_check_remote_ismounted
export -f do_vimtv_tweet
export -f do_vimtv_log
export -f do_vimtv_check_root_priviledges
